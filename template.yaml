AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  functionA603DBAD:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-functionA603DBAD
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: getwelcome
      CodeUri: src/getwelcome
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - LambdaInvokePolicy:
            FunctionName: !Ref function4582AFEC
      Environment:
        Variables:
          FUNCTION_NAME: !Ref function4582AFEC
          FUNCTION_ARN: !GetAtt function4582AFEC.Arn
      Events:
        apiB6C673B0GETecgdata:
          Type: Api
          Properties:
            Path: /ecg-data
            Method: GET
            RestApiId: !Ref apiB6C673B0
    Metadata:
      StackeryName: getwelcome
  function4582AFEC:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-function4582AFEC
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: Process
      CodeUri: src/Process
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - LambdaInvokePolicy:
            FunctionName: !Ref function9C4B4D95
      Environment:
        Variables:
          FUNCTION_NAME: !Ref function9C4B4D95
          FUNCTION_ARN: !GetAtt function9C4B4D95.Arn
    Metadata:
      StackeryName: Process
  function9C4B4D95:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-function9C4B4D95
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: Output
      CodeUri: src/Output
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
      Environment: {}
    Metadata:
      StackeryName: Output
  apiB6C673B0:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: ECG
      StageName: !Ref EnvironmentAPIGatewayStageName
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /ecg-data:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionA603DBAD.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
    Metadata:
      StackeryName: ECG
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)